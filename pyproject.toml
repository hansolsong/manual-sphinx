[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "sphinx-marginbook-theme"
version = "0.1.0"
description = "A Sphinx theme with margin notes for beautiful manuals"
readme = "README.md"
requires-python = ">=3.13"
authors = [
    {name = "Your Name", email = "your.email@example.com"},
]
keywords = [
    "sphinx",
    "theme",
    "documentation",
    "margin notes",
    "tufte",
    "myst",
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Framework :: Sphinx",
    "Framework :: Sphinx :: Theme",
    "Intended Audience :: Developers",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.13",
    "Topic :: Documentation",
    "Topic :: Documentation :: Sphinx",
    "Topic :: Software Development :: Documentation",
]
dependencies = [
    "sphinx>=5.0",
    "myst-parser>=1.0",
    "docutils>=0.17",
]

[project.urls]
Homepage = "https://github.com/yourusername/sphinx-marginbook-theme"
Documentation = "https://sphinx-marginbook-theme.readthedocs.io"
Repository = "https://github.com/yourusername/sphinx-marginbook-theme.git"
Issues = "https://github.com/yourusername/sphinx-marginbook-theme/issues"

[project.optional-dependencies]
dev = [
    "pytest>=7.0",
    "pytest-cov",
    "pytest-regression",
    "sphinx-toolbox",
    "black",
    "ruff",
    "mypy",
    "pre-commit",
    "sphinx-autobuild",
]
test = [
    "pytest>=7.0",
    "pytest-regression",
    "sphinx-toolbox",
    "diff-pdf-visually",
    "pillow",
    "pdfplumber",
    "pdf2image",
]
docs = [
    "sphinx-autobuild",
    "sphinx-copybutton",
    "sphinx-design",
]

[project.entry-points."sphinx.html_themes"]
marginbook = "sphinx_marginbook_theme"

[tool.hatch.build.targets.wheel]
packages = ["sphinx_marginbook_theme"]

[tool.black]
line-length = 88
target-version = ['py313']

[tool.ruff]
line-length = 88
target-version = "py313"
select = [
    "E",    # pycodestyle
    "F",    # pyflakes
    "I",    # isort
    "UP",   # pyupgrade
    "B",    # flake8-bugbear
    "C90",  # mccabe
    "RUF",  # ruff specific
]
ignore = []

[tool.mypy]
python_version = "3.13"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "docutils.*",
    "sphinx.*",
    "myst_parser.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "7.0"
testpaths = ["tests"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "-ra",
]

[tool.coverage.run]
source = ["sphinx_marginbook_theme"]
omit = [
    "*/tests/*",
    "*/__init__.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
]